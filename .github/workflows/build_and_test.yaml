name: Build & Publish

on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:
    branches:
      - master

permissions:
  contents: write

jobs:
  build-test-rust:
    name: 'Build & Test'
    strategy:
      matrix:
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Delete huge unnecessary tools folder
        run: rm -rf /opt/hostedtoolcache
      - name: Set timezone
        uses: szenius/set-timezone@v2.0
        with:
          timezoneLinux: "Asia/Shanghai"
          timezoneMacos: "Asia/Shanghai"
          timezoneWindows: "Asia/Shanghai"
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Install Rust
        run: rustup toolchain install stable --component llvm-tools-preview
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: install nextest
        uses: taiki-e/install-action@nextest
      - uses: Swatinem/rust-cache@v2
      - name: Check code format
        run: cargo fmt -- --check
      - name: Check the package for errors
        run: cargo check --all
      - name: Lint rust sources
        run: cargo clippy --all-targets --all-features --tests --benches -- -D warnings
      - name: Execute rust tests
        run: cargo nextest run --all-features
      - name: Generate a changelog
        uses: orhun/git-cliff-action@v2
        id: git-cliff
        if: startsWith(github.ref, 'refs/tags/')
        with:
          config: cliff.toml
          args: -vv --latest --strip header
        env:
          OUTPUT: CHANGES.md
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          body: ${{ steps.git-cliff.outputs.content }}

  Build Crawler & Publish Docker Image:
    name: "Build Crawler & Publish Docker Image"
    runs-on: ${{ matrix.platform }}
    needs: build-test-rust
    setps:
      strategy:
        matrix:
          platform: [ ubuntu-latest ]
      runs-on: ${{ matrix.platform }}
      steps:
        - uses: actions/checkout@v4
          with:
            fetch-depth: 0
            submodules: recursive
        - name: Install Rust
          run: rustup toolchain install stable
        - name: build rust
          run: cargo build -p crawler --bin danmu --release
        - name: Set up QEMU
          uses: docker/setup-qemu-action@v3
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3
        - name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
            registry: ccr.ccs.tencentyun.com
            username: ${{ secrets.TENCENT_DOCKERHUB_USERNAME }}
            password: ${{ secrets.TENCENT_DOCKERHUB_TOKEN }}
        - name: set time
          run: |
            TIME="$(TZ='Asia/Shanghai' date +'%Y-%m-%d-%H-%M-%S')"
            echo "TIME=$TIME" >> $GITHUB_ENV
        - name: Build and push
          uses: docker/build-push-action@v5
          with:
            context: ./crawler
            push: true
            tags: ccr.ccs.tencentyun.com/uniix-app/bilibili-monitor:carwler-${{ env.TIME }}